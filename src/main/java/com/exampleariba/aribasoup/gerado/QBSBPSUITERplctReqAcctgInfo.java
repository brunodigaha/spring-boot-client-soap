package com.exampleariba.aribasoup.gerado;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.2.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;
import java.util.ArrayList;
import org.ksoap2.serialization.PropertyInfo;

public class QBSBPSUITERplctReqAcctgInfo extends AttributeContainer implements KvmSerializable
{

    
    public String CompanyID;
    
    public Boolean BlockedIndicator;
    
    public Boolean DeletedIndicator;
    
    public QBSCode SortCode;
    
    public QBSGeneralLedgerAccountReference GeneralLedgerAccountReference;
    
    public QBSAuthorisationGroupCode AuthorisationGroupCode;
    
    public QBSCode InterestCalculationInclusionCode;
    
    public QBSCode InterestCalculationFrequencyCode;
    
    public java.util.Date LastInterestCalculationKeyDate;
    
    public java.util.Date LastInterestCalculationRunDate;
    
    public QBSCode PaymentMethodsCode;
    
    public QBSCode PaymentBlockCode;
    
    public QBSCashDiscountTermsCode CashDiscountTermsCode;
    
    public Boolean LocalProcessingIndicator;
    
    public QBSCode AccountingClerkInitialsCode;
    
    public String DebtorPartyCreditorID;
    
    public QBSMEDIUM_Name EmployeeResponsiblePartyName;
    
    public String EmployeeResponsiblePartyFaxFormattedNumberDescription;
    
    public String EmployeeResponsiblePartyTelephoneFormattedNumberDescription;
    
    public String EmployeeResponsiblePartyWebAddress;
    
    public String Note;
    
    public QBSCode PlanningGroupCode;
    
    public QBSPartyInternalID HeadOfficeAccountInternalID;
    
    public QBSPartyInternalID ReceiverHeadOfficeAccountInternalID;
    
    public QBSPartyInternalID AlternativePayeePartyInternalID;
    
    public QBSPartyInternalID ReceiverAlternativePayeePartyInternalID;
    
    public QBSAmount BillOfExchangeLimitAmount;
    
    public String ProbableCheckPaidDuration;
    
    public Boolean DoubleEntriesCheckIndicator;
    
    public QBSCode BusinessPartnerToleranceGroupCode;
    
    public QBSBankInternalID HouseBankInternalID;
    
    public Boolean PayItemsSeparatelyIndicator;
    
    public QBSTaxExemptionCertificateID WithholdingTaxExemptionCertificateID;
    
    public java.util.Date WithholdingTaxExemptionCertificateValidityDate;
    
    public QBSTaxTypeCode WithholdingTaxTypeCode;
    
    public QBSTaxExemptionReasonCode WithholdingTaxExemptionReasonCode;
    
    public String WithholdingTaxCountryCode;
    
    public QBSCode VendorRecipientTypeCode;
    
    public QBSCode ReductionRatesDeterminationCode;
    
    public QBSCode MinorityIndicatorsCode;
    
    public String PreviousSupplierInternalID;
    
    public QBSEmployeeID EmployeeID;
    
    public QBSCode PaymentGroupingCode;
    
    public QBSCode PaymentMethodSupplementCode;
    
    public Boolean PaymentAdvicesByEDIIndicator;
    
    public QBSCode ReleaseApprovalGroupCode;
    
    public QBSCode InvoiceVerificationToleranceGroupCode;
    
    public QBSCode CreditMemosPaymentTermsCode;
    
    public QBSCode PeriodicAccountStatementsCode;
    
    public java.util.Date CertificationDate;
    
    public Boolean DeletionBlockedIndicator;
    
    public Boolean CustomerSupplierClearingIndicator;
    
    public QBSCode DunningNoticeGroupingCode;
    
    public ArrayList< QBSBPSUITERplctReqDunInfo> DunningInformation =new ArrayList<QBSBPSUITERplctReqDunInfo >();
    
    public ArrayList< QBSBPSUITERplctReqWhldgTx> WithholdingTax =new ArrayList<QBSBPSUITERplctReqWhldgTx >();
    
    public ArrayList< QBSBPSUITERplctReqText> AccountingText =new ArrayList<QBSBPSUITERplctReqText >();
    
    public ArrayList< QBSGenericCustomField> GenericCustomField =new ArrayList<QBSGenericCustomField >();
    
    public String actionCode;
    
    public Boolean dunningInformationListCompleteTransmissionIndicator=false;
    
    public Boolean withholdingTaxListCompleteTransmissionIndicator=false;
    
    public Boolean accountingTextListCompleteTransmissionIndicator=false;
    private transient java.lang.Object __source;    
    

    
    
    
    public void loadFromSoap(java.lang.Object paramObj,QBSExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        __source=inObj; 
        if(inObj instanceof SoapObject)
        {
            SoapObject soapObject=(SoapObject)inObj;
            int size = soapObject.getPropertyCount();
            for (int i0=0;i0< size;i0++)
            {
                PropertyInfo info=soapObject.getPropertyInfo(i0);
                if(!loadProperty(info,soapObject,__envelope))
                {
                }
            } 
        }
        if (inObj.hasAttribute("actionCode"))
        {	
            java.lang.Object j = inObj.getAttribute("actionCode");
            if (j != null)
            {
                actionCode = j.toString();
            }
        }
        if (inObj.hasAttribute("dunningInformationListCompleteTransmissionIndicator"))
        {	
            java.lang.Object j = inObj.getAttribute("dunningInformationListCompleteTransmissionIndicator");
            if (j != null)
            {
                dunningInformationListCompleteTransmissionIndicator = new Boolean(j.toString());
            }
        }
        if (inObj.hasAttribute("withholdingTaxListCompleteTransmissionIndicator"))
        {	
            java.lang.Object j = inObj.getAttribute("withholdingTaxListCompleteTransmissionIndicator");
            if (j != null)
            {
                withholdingTaxListCompleteTransmissionIndicator = new Boolean(j.toString());
            }
        }
        if (inObj.hasAttribute("accountingTextListCompleteTransmissionIndicator"))
        {	
            java.lang.Object j = inObj.getAttribute("accountingTextListCompleteTransmissionIndicator");
            if (j != null)
            {
                accountingTextListCompleteTransmissionIndicator = new Boolean(j.toString());
            }
        }

    }

    
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,QBSExtendedSoapSerializationEnvelope __envelope)
    {
        java.lang.Object obj = info.getValue();
        if (info.name.equals("CompanyID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.CompanyID = j.toString();
                    }
                }
                else{
                    this.CompanyID = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("BlockedIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.BlockedIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.BlockedIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("DeletedIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DeletedIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.DeletedIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("SortCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.SortCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("GeneralLedgerAccountReference"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.GeneralLedgerAccountReference = (QBSGeneralLedgerAccountReference)__envelope.get(j,QBSGeneralLedgerAccountReference.class,false);
            }
            return true;
        }
        if (info.name.equals("AuthorisationGroupCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.AuthorisationGroupCode = (QBSAuthorisationGroupCode)__envelope.get(j,QBSAuthorisationGroupCode.class,false);
            }
            return true;
        }
        if (info.name.equals("InterestCalculationInclusionCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.InterestCalculationInclusionCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("InterestCalculationFrequencyCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.InterestCalculationFrequencyCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("LastInterestCalculationKeyDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.LastInterestCalculationKeyDate = QBSHelper.ConvertFromWebService(j.toString());
                    }
                }
                else if (obj instanceof java.util.Date){
                    this.LastInterestCalculationKeyDate = (java.util.Date)obj;
                }
            }
            return true;
        }
        if (info.name.equals("LastInterestCalculationRunDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.LastInterestCalculationRunDate = QBSHelper.ConvertFromWebService(j.toString());
                    }
                }
                else if (obj instanceof java.util.Date){
                    this.LastInterestCalculationRunDate = (java.util.Date)obj;
                }
            }
            return true;
        }
        if (info.name.equals("PaymentMethodsCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PaymentMethodsCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("PaymentBlockCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PaymentBlockCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("CashDiscountTermsCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.CashDiscountTermsCode = (QBSCashDiscountTermsCode)__envelope.get(j,QBSCashDiscountTermsCode.class,false);
            }
            return true;
        }
        if (info.name.equals("LocalProcessingIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.LocalProcessingIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.LocalProcessingIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("AccountingClerkInitialsCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.AccountingClerkInitialsCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("DebtorPartyCreditorID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DebtorPartyCreditorID = j.toString();
                    }
                }
                else{
                    this.DebtorPartyCreditorID = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("EmployeeResponsiblePartyName"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.EmployeeResponsiblePartyName = (QBSMEDIUM_Name)__envelope.get(j,QBSMEDIUM_Name.class,false);
            }
            return true;
        }
        if (info.name.equals("EmployeeResponsiblePartyFaxFormattedNumberDescription"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.EmployeeResponsiblePartyFaxFormattedNumberDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.EmployeeResponsiblePartyFaxFormattedNumberDescription = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("EmployeeResponsiblePartyTelephoneFormattedNumberDescription"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.EmployeeResponsiblePartyTelephoneFormattedNumberDescription = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.EmployeeResponsiblePartyTelephoneFormattedNumberDescription = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("EmployeeResponsiblePartyWebAddress"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.EmployeeResponsiblePartyWebAddress = j.toString();
                    }
                }
                else{
                    this.EmployeeResponsiblePartyWebAddress = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("Note"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Note = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Note = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("PlanningGroupCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PlanningGroupCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("HeadOfficeAccountInternalID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.HeadOfficeAccountInternalID = (QBSPartyInternalID)__envelope.get(j,QBSPartyInternalID.class,false);
            }
            return true;
        }
        if (info.name.equals("ReceiverHeadOfficeAccountInternalID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ReceiverHeadOfficeAccountInternalID = (QBSPartyInternalID)__envelope.get(j,QBSPartyInternalID.class,false);
            }
            return true;
        }
        if (info.name.equals("AlternativePayeePartyInternalID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.AlternativePayeePartyInternalID = (QBSPartyInternalID)__envelope.get(j,QBSPartyInternalID.class,false);
            }
            return true;
        }
        if (info.name.equals("ReceiverAlternativePayeePartyInternalID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ReceiverAlternativePayeePartyInternalID = (QBSPartyInternalID)__envelope.get(j,QBSPartyInternalID.class,false);
            }
            return true;
        }
        if (info.name.equals("BillOfExchangeLimitAmount"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.BillOfExchangeLimitAmount = (QBSAmount)__envelope.get(j,QBSAmount.class,false);
            }
            return true;
        }
        if (info.name.equals("ProbableCheckPaidDuration"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.ProbableCheckPaidDuration = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.ProbableCheckPaidDuration = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("DoubleEntriesCheckIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DoubleEntriesCheckIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.DoubleEntriesCheckIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("BusinessPartnerToleranceGroupCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.BusinessPartnerToleranceGroupCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("HouseBankInternalID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.HouseBankInternalID = (QBSBankInternalID)__envelope.get(j,QBSBankInternalID.class,false);
            }
            return true;
        }
        if (info.name.equals("PayItemsSeparatelyIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.PayItemsSeparatelyIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.PayItemsSeparatelyIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("WithholdingTaxExemptionCertificateID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.WithholdingTaxExemptionCertificateID = (QBSTaxExemptionCertificateID)__envelope.get(j,QBSTaxExemptionCertificateID.class,false);
            }
            return true;
        }
        if (info.name.equals("WithholdingTaxExemptionCertificateValidityDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.WithholdingTaxExemptionCertificateValidityDate = QBSHelper.ConvertFromWebService(j.toString());
                    }
                }
                else if (obj instanceof java.util.Date){
                    this.WithholdingTaxExemptionCertificateValidityDate = (java.util.Date)obj;
                }
            }
            return true;
        }
        if (info.name.equals("WithholdingTaxTypeCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.WithholdingTaxTypeCode = (QBSTaxTypeCode)__envelope.get(j,QBSTaxTypeCode.class,false);
            }
            return true;
        }
        if (info.name.equals("WithholdingTaxExemptionReasonCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.WithholdingTaxExemptionReasonCode = (QBSTaxExemptionReasonCode)__envelope.get(j,QBSTaxExemptionReasonCode.class,false);
            }
            return true;
        }
        if (info.name.equals("WithholdingTaxCountryCode"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.WithholdingTaxCountryCode = j.toString();
                    }
                }
                else{
                    this.WithholdingTaxCountryCode = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("VendorRecipientTypeCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.VendorRecipientTypeCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("ReductionRatesDeterminationCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ReductionRatesDeterminationCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("MinorityIndicatorsCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.MinorityIndicatorsCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("PreviousSupplierInternalID"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.PreviousSupplierInternalID = j.toString();
                    }
                }
                else{
                    this.PreviousSupplierInternalID = obj.toString();
                }
            }
            return true;
        }
        if (info.name.equals("EmployeeID"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.EmployeeID = (QBSEmployeeID)__envelope.get(j,QBSEmployeeID.class,false);
            }
            return true;
        }
        if (info.name.equals("PaymentGroupingCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PaymentGroupingCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("PaymentMethodSupplementCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PaymentMethodSupplementCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("PaymentAdvicesByEDIIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.PaymentAdvicesByEDIIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.PaymentAdvicesByEDIIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("ReleaseApprovalGroupCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.ReleaseApprovalGroupCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("InvoiceVerificationToleranceGroupCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.InvoiceVerificationToleranceGroupCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("CreditMemosPaymentTermsCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.CreditMemosPaymentTermsCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("PeriodicAccountStatementsCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.PeriodicAccountStatementsCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("CertificationDate"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.CertificationDate = QBSHelper.ConvertFromWebService(j.toString());
                    }
                }
                else if (obj instanceof java.util.Date){
                    this.CertificationDate = (java.util.Date)obj;
                }
            }
            return true;
        }
        if (info.name.equals("DeletionBlockedIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.DeletionBlockedIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.DeletionBlockedIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("CustomerSupplierClearingIndicator"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.CustomerSupplierClearingIndicator = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.CustomerSupplierClearingIndicator = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("DunningNoticeGroupingCode"))
        {
            if(obj!=null)
            {
                java.lang.Object j = obj;
                this.DunningNoticeGroupingCode = (QBSCode)__envelope.get(j,QBSCode.class,false);
            }
            return true;
        }
        if (info.name.equals("DunningInformation"))
        {
            if(obj!=null)
            {
                if(this.DunningInformation==null)
                {
                    this.DunningInformation = new java.util.ArrayList< QBSBPSUITERplctReqDunInfo>();
                }
                java.lang.Object j =obj;
                QBSBPSUITERplctReqDunInfo j1= (QBSBPSUITERplctReqDunInfo)__envelope.get(j,QBSBPSUITERplctReqDunInfo.class,false);
                this.DunningInformation.add(j1);
            }
            return true;
        }
        if (info.name.equals("WithholdingTax"))
        {
            if(obj!=null)
            {
                if(this.WithholdingTax==null)
                {
                    this.WithholdingTax = new java.util.ArrayList< QBSBPSUITERplctReqWhldgTx>();
                }
                java.lang.Object j =obj;
                QBSBPSUITERplctReqWhldgTx j1= (QBSBPSUITERplctReqWhldgTx)__envelope.get(j,QBSBPSUITERplctReqWhldgTx.class,false);
                this.WithholdingTax.add(j1);
            }
            return true;
        }
        if (info.name.equals("AccountingText"))
        {
            if(obj!=null)
            {
                if(this.AccountingText==null)
                {
                    this.AccountingText = new java.util.ArrayList< QBSBPSUITERplctReqText>();
                }
                java.lang.Object j =obj;
                QBSBPSUITERplctReqText j1= (QBSBPSUITERplctReqText)__envelope.get(j,QBSBPSUITERplctReqText.class,false);
                this.AccountingText.add(j1);
            }
            return true;
        }
        if (info.name.equals("GenericCustomField"))
        {
            if(obj!=null)
            {
                if(this.GenericCustomField==null)
                {
                    this.GenericCustomField = new java.util.ArrayList< QBSGenericCustomField>();
                }
                java.lang.Object j =obj;
                QBSGenericCustomField j1= (QBSGenericCustomField)__envelope.get(j,QBSGenericCustomField.class,false);
                this.GenericCustomField.add(j1);
            }
            return true;
        }
        return false;
    }
    
    public java.lang.Object getOriginalXmlSource()
    {
        return __source;
    }    
    

    @Override
    public java.lang.Object getProperty(int propertyIndex) {
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==0)
        {
            return CompanyID;
        }
        if(propertyIndex==1)
        {
            return this.BlockedIndicator!=null?this.BlockedIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==2)
        {
            return this.DeletedIndicator!=null?this.DeletedIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==3)
        {
            return this.SortCode!=null?this.SortCode.getSimpleValue():null;
        }
        if(propertyIndex==4)
        {
            return this.GeneralLedgerAccountReference!=null?this.GeneralLedgerAccountReference:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==5)
        {
            return this.AuthorisationGroupCode!=null?this.AuthorisationGroupCode.getSimpleValue():null;
        }
        if(propertyIndex==6)
        {
            return this.InterestCalculationInclusionCode!=null?this.InterestCalculationInclusionCode.getSimpleValue():null;
        }
        if(propertyIndex==7)
        {
            return this.InterestCalculationFrequencyCode!=null?this.InterestCalculationFrequencyCode.getSimpleValue():null;
        }
        if(propertyIndex==8)
        {
            return this.LastInterestCalculationKeyDate!=null?QBSHelper.getDateFormat().format(this.LastInterestCalculationKeyDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==9)
        {
            return this.LastInterestCalculationRunDate!=null?QBSHelper.getDateFormat().format(this.LastInterestCalculationRunDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==10)
        {
            return this.PaymentMethodsCode!=null?this.PaymentMethodsCode.getSimpleValue():null;
        }
        if(propertyIndex==11)
        {
            return this.PaymentBlockCode!=null?this.PaymentBlockCode.getSimpleValue():null;
        }
        if(propertyIndex==12)
        {
            return this.CashDiscountTermsCode!=null?this.CashDiscountTermsCode.getSimpleValue():null;
        }
        if(propertyIndex==13)
        {
            return this.LocalProcessingIndicator!=null?this.LocalProcessingIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==14)
        {
            return this.AccountingClerkInitialsCode!=null?this.AccountingClerkInitialsCode.getSimpleValue():null;
        }
        if(propertyIndex==15)
        {
            return this.DebtorPartyCreditorID!=null?this.DebtorPartyCreditorID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==16)
        {
            return this.EmployeeResponsiblePartyName!=null?this.EmployeeResponsiblePartyName.getSimpleValue():null;
        }
        if(propertyIndex==17)
        {
            return this.EmployeeResponsiblePartyFaxFormattedNumberDescription!=null?this.EmployeeResponsiblePartyFaxFormattedNumberDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==18)
        {
            return this.EmployeeResponsiblePartyTelephoneFormattedNumberDescription!=null?this.EmployeeResponsiblePartyTelephoneFormattedNumberDescription:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==19)
        {
            return this.EmployeeResponsiblePartyWebAddress!=null?this.EmployeeResponsiblePartyWebAddress:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==20)
        {
            return this.Note!=null?this.Note:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==21)
        {
            return this.PlanningGroupCode!=null?this.PlanningGroupCode.getSimpleValue():null;
        }
        if(propertyIndex==22)
        {
            return this.HeadOfficeAccountInternalID!=null?this.HeadOfficeAccountInternalID.getSimpleValue():null;
        }
        if(propertyIndex==23)
        {
            return this.ReceiverHeadOfficeAccountInternalID!=null?this.ReceiverHeadOfficeAccountInternalID.getSimpleValue():null;
        }
        if(propertyIndex==24)
        {
            return this.AlternativePayeePartyInternalID!=null?this.AlternativePayeePartyInternalID.getSimpleValue():null;
        }
        if(propertyIndex==25)
        {
            return this.ReceiverAlternativePayeePartyInternalID!=null?this.ReceiverAlternativePayeePartyInternalID.getSimpleValue():null;
        }
        if(propertyIndex==26)
        {
            return this.BillOfExchangeLimitAmount!=null?this.BillOfExchangeLimitAmount.getSimpleValue():null;
        }
        if(propertyIndex==27)
        {
            return this.ProbableCheckPaidDuration!=null?this.ProbableCheckPaidDuration:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==28)
        {
            return this.DoubleEntriesCheckIndicator!=null?this.DoubleEntriesCheckIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==29)
        {
            return this.BusinessPartnerToleranceGroupCode!=null?this.BusinessPartnerToleranceGroupCode.getSimpleValue():null;
        }
        if(propertyIndex==30)
        {
            return this.HouseBankInternalID!=null?this.HouseBankInternalID.getSimpleValue():null;
        }
        if(propertyIndex==31)
        {
            return this.PayItemsSeparatelyIndicator!=null?this.PayItemsSeparatelyIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==32)
        {
            return this.WithholdingTaxExemptionCertificateID!=null?this.WithholdingTaxExemptionCertificateID.getSimpleValue():null;
        }
        if(propertyIndex==33)
        {
            return this.WithholdingTaxExemptionCertificateValidityDate!=null?QBSHelper.getDateFormat().format(this.WithholdingTaxExemptionCertificateValidityDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==34)
        {
            return this.WithholdingTaxTypeCode!=null?this.WithholdingTaxTypeCode.getSimpleValue():null;
        }
        if(propertyIndex==35)
        {
            return this.WithholdingTaxExemptionReasonCode!=null?this.WithholdingTaxExemptionReasonCode.getSimpleValue():null;
        }
        if(propertyIndex==36)
        {
            return this.WithholdingTaxCountryCode!=null?this.WithholdingTaxCountryCode:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==37)
        {
            return this.VendorRecipientTypeCode!=null?this.VendorRecipientTypeCode.getSimpleValue():null;
        }
        if(propertyIndex==38)
        {
            return this.ReductionRatesDeterminationCode!=null?this.ReductionRatesDeterminationCode.getSimpleValue():null;
        }
        if(propertyIndex==39)
        {
            return this.MinorityIndicatorsCode!=null?this.MinorityIndicatorsCode.getSimpleValue():null;
        }
        if(propertyIndex==40)
        {
            return this.PreviousSupplierInternalID!=null?this.PreviousSupplierInternalID:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==41)
        {
            return this.EmployeeID!=null?this.EmployeeID.getSimpleValue():null;
        }
        if(propertyIndex==42)
        {
            return this.PaymentGroupingCode!=null?this.PaymentGroupingCode.getSimpleValue():null;
        }
        if(propertyIndex==43)
        {
            return this.PaymentMethodSupplementCode!=null?this.PaymentMethodSupplementCode.getSimpleValue():null;
        }
        if(propertyIndex==44)
        {
            return this.PaymentAdvicesByEDIIndicator!=null?this.PaymentAdvicesByEDIIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==45)
        {
            return this.ReleaseApprovalGroupCode!=null?this.ReleaseApprovalGroupCode.getSimpleValue():null;
        }
        if(propertyIndex==46)
        {
            return this.InvoiceVerificationToleranceGroupCode!=null?this.InvoiceVerificationToleranceGroupCode.getSimpleValue():null;
        }
        if(propertyIndex==47)
        {
            return this.CreditMemosPaymentTermsCode!=null?this.CreditMemosPaymentTermsCode.getSimpleValue():null;
        }
        if(propertyIndex==48)
        {
            return this.PeriodicAccountStatementsCode!=null?this.PeriodicAccountStatementsCode.getSimpleValue():null;
        }
        if(propertyIndex==49)
        {
            return this.CertificationDate!=null?QBSHelper.getDateFormat().format(this.CertificationDate):SoapPrimitive.NullSkip;
        }
        if(propertyIndex==50)
        {
            return this.DeletionBlockedIndicator!=null?this.DeletionBlockedIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==51)
        {
            return this.CustomerSupplierClearingIndicator!=null?this.CustomerSupplierClearingIndicator:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==52)
        {
            return this.DunningNoticeGroupingCode!=null?this.DunningNoticeGroupingCode.getSimpleValue():null;
        }
        if(propertyIndex>=53 && propertyIndex < 53+this.DunningInformation.size())
        {
            java.lang.Object DunningInformation = this.DunningInformation.get(propertyIndex-(53));
            return DunningInformation!=null?DunningInformation:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=53+this.DunningInformation.size() && propertyIndex < 53+this.DunningInformation.size()+this.WithholdingTax.size())
        {
            java.lang.Object WithholdingTax = this.WithholdingTax.get(propertyIndex-(53+this.DunningInformation.size()));
            return WithholdingTax!=null?WithholdingTax:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=53+this.DunningInformation.size()+this.WithholdingTax.size() && propertyIndex < 53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size())
        {
            java.lang.Object AccountingText = this.AccountingText.get(propertyIndex-(53+this.DunningInformation.size()+this.WithholdingTax.size()));
            return AccountingText!=null?AccountingText:SoapPrimitive.NullNilElement;
        }
        if(propertyIndex>=53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size() && propertyIndex < 53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size()+this.GenericCustomField.size())
        {
            return  this.GenericCustomField.get(propertyIndex-(53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size())).getSimpleValue();
        }
        return null;
    }


    @Override
    public int getPropertyCount() {
        return 53+DunningInformation.size()+WithholdingTax.size()+AccountingText.size()+GenericCustomField.size();
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        if(propertyIndex==0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "CompanyID";
            info.namespace= "";
        }
        if(propertyIndex==1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "BlockedIndicator";
            info.namespace= "";
        }
        if(propertyIndex==2)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "DeletedIndicator";
            info.namespace= "";
        }
        if(propertyIndex==3)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "SortCode";
            info.namespace= "";
        }
        if(propertyIndex==4)
        {
            info.type = QBSGeneralLedgerAccountReference.class;
            info.name = "GeneralLedgerAccountReference";
            info.namespace= "";
        }
        if(propertyIndex==5)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "AuthorisationGroupCode";
            info.namespace= "";
        }
        if(propertyIndex==6)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "InterestCalculationInclusionCode";
            info.namespace= "";
        }
        if(propertyIndex==7)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "InterestCalculationFrequencyCode";
            info.namespace= "";
        }
        if(propertyIndex==8)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "LastInterestCalculationKeyDate";
            info.namespace= "";
        }
        if(propertyIndex==9)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "LastInterestCalculationRunDate";
            info.namespace= "";
        }
        if(propertyIndex==10)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "PaymentMethodsCode";
            info.namespace= "";
        }
        if(propertyIndex==11)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "PaymentBlockCode";
            info.namespace= "";
        }
        if(propertyIndex==12)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "CashDiscountTermsCode";
            info.namespace= "";
        }
        if(propertyIndex==13)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "LocalProcessingIndicator";
            info.namespace= "";
        }
        if(propertyIndex==14)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "AccountingClerkInitialsCode";
            info.namespace= "";
        }
        if(propertyIndex==15)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "DebtorPartyCreditorID";
            info.namespace= "";
        }
        if(propertyIndex==16)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "EmployeeResponsiblePartyName";
            info.namespace= "";
        }
        if(propertyIndex==17)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "EmployeeResponsiblePartyFaxFormattedNumberDescription";
            info.namespace= "";
        }
        if(propertyIndex==18)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "EmployeeResponsiblePartyTelephoneFormattedNumberDescription";
            info.namespace= "";
        }
        if(propertyIndex==19)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "EmployeeResponsiblePartyWebAddress";
            info.namespace= "";
        }
        if(propertyIndex==20)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Note";
            info.namespace= "";
        }
        if(propertyIndex==21)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "PlanningGroupCode";
            info.namespace= "";
        }
        if(propertyIndex==22)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "HeadOfficeAccountInternalID";
            info.namespace= "";
        }
        if(propertyIndex==23)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "ReceiverHeadOfficeAccountInternalID";
            info.namespace= "";
        }
        if(propertyIndex==24)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "AlternativePayeePartyInternalID";
            info.namespace= "";
        }
        if(propertyIndex==25)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "ReceiverAlternativePayeePartyInternalID";
            info.namespace= "";
        }
        if(propertyIndex==26)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "BillOfExchangeLimitAmount";
            info.namespace= "";
        }
        if(propertyIndex==27)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "ProbableCheckPaidDuration";
            info.namespace= "";
        }
        if(propertyIndex==28)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "DoubleEntriesCheckIndicator";
            info.namespace= "";
        }
        if(propertyIndex==29)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "BusinessPartnerToleranceGroupCode";
            info.namespace= "";
        }
        if(propertyIndex==30)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "HouseBankInternalID";
            info.namespace= "";
        }
        if(propertyIndex==31)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "PayItemsSeparatelyIndicator";
            info.namespace= "";
        }
        if(propertyIndex==32)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "WithholdingTaxExemptionCertificateID";
            info.namespace= "";
        }
        if(propertyIndex==33)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "WithholdingTaxExemptionCertificateValidityDate";
            info.namespace= "";
        }
        if(propertyIndex==34)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "WithholdingTaxTypeCode";
            info.namespace= "";
        }
        if(propertyIndex==35)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "WithholdingTaxExemptionReasonCode";
            info.namespace= "";
        }
        if(propertyIndex==36)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "WithholdingTaxCountryCode";
            info.namespace= "";
        }
        if(propertyIndex==37)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "VendorRecipientTypeCode";
            info.namespace= "";
        }
        if(propertyIndex==38)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "ReductionRatesDeterminationCode";
            info.namespace= "";
        }
        if(propertyIndex==39)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "MinorityIndicatorsCode";
            info.namespace= "";
        }
        if(propertyIndex==40)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "PreviousSupplierInternalID";
            info.namespace= "";
        }
        if(propertyIndex==41)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "EmployeeID";
            info.namespace= "";
        }
        if(propertyIndex==42)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "PaymentGroupingCode";
            info.namespace= "";
        }
        if(propertyIndex==43)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "PaymentMethodSupplementCode";
            info.namespace= "";
        }
        if(propertyIndex==44)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "PaymentAdvicesByEDIIndicator";
            info.namespace= "";
        }
        if(propertyIndex==45)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "ReleaseApprovalGroupCode";
            info.namespace= "";
        }
        if(propertyIndex==46)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "InvoiceVerificationToleranceGroupCode";
            info.namespace= "";
        }
        if(propertyIndex==47)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "CreditMemosPaymentTermsCode";
            info.namespace= "";
        }
        if(propertyIndex==48)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "PeriodicAccountStatementsCode";
            info.namespace= "";
        }
        if(propertyIndex==49)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "CertificationDate";
            info.namespace= "";
        }
        if(propertyIndex==50)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "DeletionBlockedIndicator";
            info.namespace= "";
        }
        if(propertyIndex==51)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "CustomerSupplierClearingIndicator";
            info.namespace= "";
        }
        if(propertyIndex==52)
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "DunningNoticeGroupingCode";
            info.namespace= "";
        }
        if(propertyIndex>=53 && propertyIndex < 53+this.DunningInformation.size())
        {
            info.type = QBSBPSUITERplctReqDunInfo.class;
            info.name = "DunningInformation";
            info.namespace= "";
        }
        if(propertyIndex>=53+this.DunningInformation.size() && propertyIndex < 53+this.DunningInformation.size()+this.WithholdingTax.size())
        {
            info.type = QBSBPSUITERplctReqWhldgTx.class;
            info.name = "WithholdingTax";
            info.namespace= "";
        }
        if(propertyIndex>=53+this.DunningInformation.size()+this.WithholdingTax.size() && propertyIndex < 53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size())
        {
            info.type = QBSBPSUITERplctReqText.class;
            info.name = "AccountingText";
            info.namespace= "";
        }
        if(propertyIndex>=53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size() && propertyIndex < 53+this.DunningInformation.size()+this.WithholdingTax.size()+this.AccountingText.size()+this.GenericCustomField.size())
        {
            info.type = org.ksoap2.serialization.SoapPrimitive.class;
            info.name = "GenericCustomField";
            info.namespace= "http://ariba.com/xi/SupplierManagement";
        }
    }
    
    @Override
    public void setProperty(int arg0, java.lang.Object arg1)
    {
    }



    @Override
    public int getAttributeCount() {
        return 4;
    }
    
    @Override
    public void getAttributeInfo(int index, AttributeInfo info) {
        if(index==0)
        {
            info.name = "actionCode";
            info.namespace= "";
            if(this.actionCode!=null)
            {
                info.setValue(this.actionCode);
            }
            
        }
        if(index==1)
        {
            info.name = "dunningInformationListCompleteTransmissionIndicator";
            info.namespace= "";
            if(this.dunningInformationListCompleteTransmissionIndicator!=null)
            {
                info.setValue(this.dunningInformationListCompleteTransmissionIndicator);
            }
            
        }
        if(index==2)
        {
            info.name = "withholdingTaxListCompleteTransmissionIndicator";
            info.namespace= "";
            if(this.withholdingTaxListCompleteTransmissionIndicator!=null)
            {
                info.setValue(this.withholdingTaxListCompleteTransmissionIndicator);
            }
            
        }
        if(index==3)
        {
            info.name = "accountingTextListCompleteTransmissionIndicator";
            info.namespace= "";
            if(this.accountingTextListCompleteTransmissionIndicator!=null)
            {
                info.setValue(this.accountingTextListCompleteTransmissionIndicator);
            }
            
        }
    }

    @Override
    public void getAttribute(int i, AttributeInfo attributeInfo) {

    }

    @Override
    public void setAttribute(AttributeInfo attributeInfo) {

    }    
}

